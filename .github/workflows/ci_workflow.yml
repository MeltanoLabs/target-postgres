name: Test target-postgres

on: [push]

jobs:
  linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Only lint using the primary version used for dev
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python '${{ matrix.python-version }}'
      uses: actions/setup-python@v4
      with:
        python-version: '${{ matrix.python-version }}'

    - name: Install Poetry
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Install dependencies
      run: |
        poetry install

    - name: Run lint command from tox.ini
      run: |
        poetry run tox -e lint

  pytest:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST_AUTH_METHOD: cert clientcert=verify-full
          POSTGRES_INITDB_ARGS: --auth-host=cert -c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key -c ssl_ca_file=/var/lib/postgresql/ca.crt -c hba_file=/var/lib/postgresql/pg_hba.conf
        # Not placed in the data directory (/var/lib/postgresql/data) because of https://gist.github.com/mrw34/c97bb03ea1054afb551886ffc8b63c3b?permalink_comment_id=2678568#gistcomment-2678568
        # https://stackoverflow.com/questions/69609618/github-action-i-wrote-doesnt-have-access-to-repos-files-that-is-calling-the-ac
        volumes:
          - /home/runner/work/target-postgres/target-postgres/ssl/server.crt:/var/lib/postgresql/server.crt
          - /home/runner/work/target-postgres/target-postgres/ssl/server.key:/var/lib/postgresql/server.key
          - /home/runner/work/target-postgres/target-postgres/ssl/ca.crt:/var/lib/postgresql/ca.crt
          - /home/runner/work/target-postgres/target-postgres/ssl/pg_hba.conf:/var/lib/postgresql/pg_hba.conf
        ports:
          - "5432:5432"
      postgres_no_ssl:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python '${{ matrix.python-version }}'
      uses: actions/setup-python@v4
      with:
        python-version: '${{ matrix.python-version }}'
    - name: Install Poetry
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Install dependencies
      run: |
        poetry install
    - name: Test with pytest
      run: |
        poetry run pytest --capture=no

  integration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      python-version: "3.8"
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pipx install meltano
        meltano install
    - name: smoke-test-tap
      run: meltano run tap-smoke-test target-postgres
