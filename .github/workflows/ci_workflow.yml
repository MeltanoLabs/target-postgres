name: Test target-postgres

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]
  workflow_dispatch:
    inputs: {}

jobs:
  linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Only lint using the primary version used for dev
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python '${{ matrix.python-version }}'
      uses: actions/setup-python@v4
      with:
        python-version: '${{ matrix.python-version }}'

    - name: Install Poetry
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Install dependencies
      run: |
        poetry install

    - name: Run lint command from tox.ini
      run: |
        poetry run tox -e lint

  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Fix key permissions
      run: |
        chmod 600 ssl/server.key
        sudo chown 999:999 ssl/server.key
        chmod 600 ssl/pkey.key
    - name: Set up Postgres container
      run: |
        docker compose -f docker-compose.yml up -d
    - name: Set up Python '${{ matrix.python-version }}'
      uses: actions/setup-python@v4
      with:
        python-version: '${{ matrix.python-version }}'
    - name: Install Poetry
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Install dependencies
      run: |
        poetry install
    - name: Test with pytest
      run: |
        poetry run pytest --capture=no

  integration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      python-version: "3.8"
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pipx install meltano
        meltano install
    - name: smoke-test-tap
      run: meltano run tap-smoke-test target-postgres
