name: Test target-postgres

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
    - docker-compose.yml
    - pyproject.toml
    - poetry.lock
    - target_postgres/**
    - .github/workflows/ci_workflow.yml
  push:
    branches: [main]
    paths:
    - docker-compose.yml
    - pyproject.toml
    - poetry.lock
    - target_postgres/**
    - .github/workflows/ci_workflow.yml
  workflow_dispatch:
    inputs: {}

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - "3.13"
        - "3.12"
        - "3.11"
        - "3.10"
        - "3.9"
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-tags: true
    - name: Fix key permissions
      run: |
        chmod 600 ssl/server.key
        sudo chown 999:999 ssl/server.key
        chmod 600 ssl/pkey.key
        chmod 644 ssl/public_pkey.key
    - name: Set up Postgres container
      run: |
        docker compose -f docker-compose.yml up -d
    - name: Set up Python '${{ matrix.python-version }}'
      uses: actions/setup-python@v5
      with:
        python-version: '${{ matrix.python-version }}'
    - name: Install Poetry
      env:
        PIP_CONSTRAINT: ${{ github.workspace }}/.github/workflows/constraints.txt
      run: |
        python -m pip install --upgrade pip
        pipx install poetry
    - name: Install dependencies
      run: |
        poetry env use python${{ matrix.python-version }}
        poetry install
    - name: Run pytest
      run: |
        poetry run pytest --capture=no
    - name: Run lint
      run: |
        poetry run tox -e lint

  integration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pipx install meltano
        meltano install
    - name: smoke-test-tap
      run: meltano run tap-smoke-test target-postgres
